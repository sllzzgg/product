CREATE EXTERNAL TABLE IF NOT EXISTS dw_shop.DW_shop_orders(
  `orderid` int, 
  `ordercode` string, 
  `parentorderid` int, 
  `createddate` timestamp,
  `orderdate` date,   
  `updateddate` timestamp, 
  `buyerid` int, 
  `buyername` string, 
  `buyeremail` string, 
  `buyercellphone` string, 
  `regionid` int,
  `regionname` string,
  `regionCityId` int,
  `regionCity` string,
  `regionProvinceId` int,
  `regionProvince` string,
  `longitude`    double,
  `latitude`     double,
  `shipregion` string, 
  `shipaddress` string, 
  `shipzipcode` string, 
  `shipname` string, 
  `shiptelphone` string, 
  `shipcellphone` string, 
  `shipemail` string, 
  `shippingmodeid` int, 
  `shippingmodename` string, 
  `realshippingmodeid` int, 
  `realshippingmodename` string, 
  `shipperid` int, 
  `shippername` string, 
  `shipperaddress` string, 
  `shippercellphone` string, 
  `freight` decimal(15,4), 
  `freightadjusted` decimal(15,4), 
  `freightactual` decimal(15,4), 
  `weight` int, 
  `shippingstatus` smallint, 
  `shipordernumber` string, 
  `expresscompanyname` string, 
  `expresscompanyabb` string, 
  `paymenttypeid` int, 
  `paymenttypename` string, 
  `paymentgateway` string, 
  `paymentstatus` smallint, 
  `refundstatus` smallint, 
  `paycurrencycode` string, 
  `paycurrencyname` string, 
  `paymentfee` decimal(15,4), 
  `paymentfeeadjusted` decimal(15,4), 
  `gatewayorderid` string, 
  `ordertotal` decimal(15,4), 
  `orderpoint` int, 
  `ordercostprice` decimal(15,4), 
  `orderprofit` decimal(15,4), 
  `orderothercost` decimal(15,4), 
  `orderoptionprice` decimal(15,4), 
  `discountname` string, 
  `discountamount` decimal(15,4), 
  `discountadjusted` decimal(15,4), 
  `discountvalue` decimal(15,4), 
  `discountvaluetype` smallint, 
  `couponcode` string, 
  `couponname` string, 
  `couponamount` decimal(15,4), 
  `couponvalue` decimal(15,4), 
  `couponvaluetype` smallint, 
  `activityname` string, 
  `activityfreeamount` decimal(15,4), 
  `activitystatus` smallint, 
  `groupbuyid` int, 
  `groupbuyprice` decimal(15,4), 
  `groupbuystatus` smallint, 
  `amount` decimal(15,4), 
  `ordertype` smallint, 
  `orderstatus` smallint, 
  `sellerid` int, 
  `sellername` string, 
  `selleremail` string, 
  `sellercellphone` string, 
  `supplierid` int, 
  `suppliername` string, 
  `referid` string, 
  `referurl` string, 
  `orderip` string, 
  `remark` string, 
  `commentstatus` smallint, 
  `producttotal` decimal(15,4), 
  `haschildren` boolean, 
  `isreviews` boolean, 
  `refertype` int, 
  `createuserid` int, 
  `originalid` bigint, 
  `ordertypesub` smallint, 
  `refername` string, 
  `ordermode` int, 
  `lineid` int, 
  `linename` string, 
  `depotid` int, 
  `depotname` string
  )PARTITIONED BY(DT string)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\t'
LOCATION '/opt/data/hive/dw_shop/DW_shop_orders';

set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nostrick;
set hive.exec.max.dynamic.partitions.pernode=1000;

INSERT OVERWRITE TABLE dw_shop.DW_shop_orders
partition(dt)
SELECT
t1.`orderid`,
t1.`ordercode`,
t1.`parentorderid`,
t1.`createddate`,
to_date(t1.`createddate`),
t1.`updateddate`,
t1.`buyerid`,
t1.`buyername`,
t1.`buyeremail`,
t1.`buyercellphone`,
t1.`regionid`,
t2.`regionname`,
t2.`regionCityId`,
t2.`regionCity`,
t2.`regionProvinceId`,
t2.`regionProvince`,
t2.`longitude`,
t2.`latitude`,
t1.`shipregion`,
t1.`shipaddress`,
t1.`shipzipcode`,
t1.`shipname`,
t1.`shiptelphone`,
t1.`shipcellphone`,
t1.`shipemail`,
t1.`shippingmodeid`,
t1.`shippingmodename`,
t1.`realshippingmodeid`,
t1.`realshippingmodename`,
t1.`shipperid`,
t1.`shippername`,
t1.`shipperaddress`,
t1.`shippercellphone`,
t1.`freight`,
t1.`freightadjusted`,
t1.`freightactual`,
t1.`weight`,
t1.`shippingstatus`,
t1.`shipordernumber`,
t1.`expresscompanyname`,
t1.`expresscompanyabb`,
t1.`paymenttypeid`,
t1.`paymenttypename`,
t1.`paymentgateway`,
t1.`paymentstatus`,
t1.`refundstatus`,
t1.`paycurrencycode`,
t1.`paycurrencyname`,
t1.`paymentfee`,
t1.`paymentfeeadjusted`,
t1.`gatewayorderid`,
t1.`ordertotal`,
t1.`orderpoint`,
t1.`ordercostprice`,
t1.`orderprofit`,
t1.`orderothercost`,
t1.`orderoptionprice`,
t1.`discountname`,
t1.`discountamount`,
t1.`discountadjusted`,
t1.`discountvalue`,
t1.`discountvaluetype`,
t1.`couponcode`,
t1.`couponname`,
t1.`couponamount`,
t1.`couponvalue`,
t1.`couponvaluetype`,
t1.`activityname`,
t1.`activityfreeamount`,
t1.`activitystatus`,
t1.`groupbuyid`,
t1.`groupbuyprice`,
t1.`groupbuystatus`,
t1.`amount`,
t1.`ordertype`,
t1.`orderstatus`,
t1.`sellerid`,
t1.`sellername`,
t1.`selleremail`,
t1.`sellercellphone`,
t1.`supplierid`,
t1.`suppliername`,
t1.`referid`,
t1.`referurl`,
t1.`orderip`,
t1.`remark`,
t1.`commentstatus`,
t1.`producttotal`,
t1.`haschildren`,
t1.`isreviews`,
t1.`refertype`,
t1.`createuserid`,
t1.`originalid`big,
t1.`ordertypesub`,
t1.`refername`,
t1.`ordermode`,
t1.`lineid`,
t1.`linename`,
t1.`depotid`,
t1.`depotname`,
to_date(t1.`createddate`)dt
FROM dw_shop.DW_Wide_Shop_RegionDepot t2 
Right JOIN (select * from ods_shop.ods_shop_orders where to_date(`createddate`)<date_sub(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),1)) t1
ON t1.regionid = t2.regionid;
